{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,iBAAkBJ,SAASC,cAAc,0BAG3C,SAASI,EAAcC,EAAQC,GAW7B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQH,EAAQC,GAEhBG,EAAOJ,EAAQC,KAEhBA,MAKPT,EAAKM,iBAAiBW,iBAAiB,SAEvC,SAAiCC,GAC/BA,EAAIC,iBAGJ,IAFA,IAAIC,EAAaC,OAAOrB,EAAKC,WAAWqB,OACpCC,EAAYF,OAAOrB,EAAKI,UAAUkB,OAC7BE,EAAI,EAAGA,EAAIxB,EAAKK,YAAYiB,MAAOE,GAAK,EAC/CjB,EAAc,EAAIiB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,SAACjB,EAAQC,GACbiB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAsCC,OAAbrB,EAAO,QAAYqB,OAANpB,EAAM,UAErEqB,OAAM,SAACtB,EAAQC,GACdiB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAmCF,OAAbrB,EAAO,QAAYqB,OAANpB,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  btnSubmitPromise: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(amount, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(amount, delay);\n      } else {\n        reject(amount, delay);\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nrefs.btnSubmitPromise.addEventListener('click', onBtnSubmitPromiseClick);\n\nfunction onBtnSubmitPromiseClick(evt) {\n  evt.preventDefault();\n  let firstDelay = Number(refs.inputDelay.value);\n  let delayStep = Number(refs.inputStep.value);\n  for (let i = 0; i < refs.inputAmount.value; i += 1) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then((amount, delay) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${amount} in ${delay}ms`);\n      })\n      .catch((amount, delay) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${amount} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","btnSubmitPromise","$ce04d3a99e08e73b$var$createPromise","amount","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","firstDelay","Number","value","delayStep","i","then","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.06288600.js.map"}